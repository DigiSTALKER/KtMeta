/*
 * Copyright 2020 Hochikong
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.dokka'
}

group 'io.github.hochikong'
version '1.0-SNAPSHOT'

//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}

test {
    useJUnitPlatform()
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compileOnly "org.jasypt:jasypt:1.9.3"
    compileOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.0"
    testImplementation "org.jasypt:jasypt:1.9.3"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.2"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        // all plugin for metadata management should set these attributes. all metadata plugin should use this RootName
        attributes 'PluginRootName': 'io.github.hochikong.ktmeta.metaplugin.api.AbstractMetaPlugin'
        // registration name in database, unique not null
        attributes 'PluginRegistName': 'KtMeta - AbstractMetaPlugin'
        // class name of plugin, used by ktmeta to load this plugin
        attributes 'PluginClassName': 'xxx'
        attributes 'PluginVersion' : '0.0.1'
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}